#[project_redis]
REDIS_PASSWORD=Humaneval123456
# please set up the address to your redis server, this address should be the ip address of your redis server's machine
REDIS_ADDRESS=127.0.0.1


#[mongodb]
# If you want to deploy mongodb by yourself, you chould modify the mongodb component in here.
# After deploying the mongdb follow the command in readme, don't forget to modify the MONGO_URI
MONGO_INITDB_ROOT_USERNAME=root
MONGO_INITDB_ROOT_PASSWORD=root12345
ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
ME_CONFIG_BASICAUTH=true
ME_CONFIG_BASICAUTH_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
wiredTigerCacheSizeGB = 2


#[human_eval_tool]
# admin email which will be used for admin login, you have to create an admin account first with this email on the web page
ADMIN_EMAIL=sh2091@cam.ac.uk
# A secret key is used for securely signing with JWT and encrypting socketio sockets. 
# A strong key can be generated using `openssl rand -base64 42`.
SECRET_KEY=THIS_SHOULD_BE_CHANGE_LATER_ON
# A mongodb url which is used to connect to mongodb and store all your chat data produced by the tod system
# we suggets to use mongodb cloud service and create your collection name with the model name.
# The example here is the mongo uri if you deploy the mongodb by yourself with given command:
# bash deploy.sh --component mongodb
MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@127.0.0.1:27017/mt5?authSource=admin&authMechanism=SCRAM-SHA-1

# This two config is used to setup the web interface or the domain name of the web page
# Therefore if you are using ip port directly, you can just replace the 127.0.0.1 below
# or us the domain like system1.humantool.com if you have your oven certificate and domain linked on your machine
# If you are going to use https, please change add your ssl certificate and key to deployment/nginx/ssl and modify the
# example.ssl.conf to ssl.conf
USE_SSL=false
REACT_APP_SERVER_URL=https://www.dialeval.online
# or https://domain name if you set USE_SSL = true and put the ssl certifacte in the nginx/ssl folder 
REACT_APP_CLIENT_URL=${REACT_APP_SERVER_URL}


#[prject_name]
APP_NAME=chatbot

# To label what kind of task and what language this system is running, it will show in the log file
TASK_LANGUAGE=English
TASK_DATASET=human_eval_tool
# The virable below is used to specify the path of the user goal file which user should be achieved.
TASK_PATH=/server/config/test_goals.json
# This is use to give the model information to this webserver, if you have another model you can copy the who directory
# and modify this part, you could choose to deploy end2end service or dst/rg service, you only need to provide the model
# name with --name argument with deploy.sh, and name you passed with will be set as MODEL_NAME environment variable
system_type=microservice  #or end2end
dst_model_id=${MODEL_NAME}_dst
rg_model_id=${MODEL_NAME}_rg
# if system_type is end2end
# put e2e_model_id insteed of dst_model_id and rg_model_id here
# like: e2e_model_id = mt5_e2e
# You also have to implement the e2e model loader in the tod_system/human_eval_service/model_loader.py by yourself,
# such as you have your own model or you don't want to seperate rg and dst, you could just modify the "load_own_model" method in that file.




#[tod_system]
# This MODEL_CONFIG_FILE_PATH variable point to the model setup you want to deploy on this machine,
# Usually you have to develop your model with tod system first and prepare an runable model, or you could apply your own model config with
# this variable, the config file must name with you model name, and put it into tod_system/human_eval_service/config
MODEL_CONFIG_FILE_PATH=/root/tod_system/human_eval_service/config/${MODEL_NAME}.cfg
